{"ast":null,"code":"import _slicedToArray from \"C:\\\\Users\\\\rianw\\\\Dev Projects\\\\crop-ai\\\\frontend\\\\crop-ai\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\rianw\\\\Dev Projects\\\\crop-ai\\\\frontend\\\\crop-ai\\\\src\\\\Predict.js\";\nimport React, { useCallback, useState } from \"react\";\nimport { useDropzone } from \"react-dropzone\";\nexport default function Predict() {\n  var _this = this;\n\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      selectedImages = _useState2[0],\n      setSelectedImages = _useState2[1];\n\n  var onDrop = useCallback(function (acceptedFiles) {\n    setSelectedImages(acceptedFiles.map(function (file) {\n      return Object.assign(file, {\n        preview: URL.createObjectURL(file)\n      });\n    }));\n  }, []);\n\n  var _useDropzone = useDropzone({\n    onDrop: onDrop\n  }),\n      getRootProps = _useDropzone.getRootProps,\n      getInputProps = _useDropzone.getInputProps,\n      isDragActive = _useDropzone.isDragActive;\n\n  var selectedImage = selectedImages?.map(function (file) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 5\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      src: file.preview,\n      style: {\n        width: \"200px\"\n      },\n      alt: \"\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 7\n      }\n    }));\n  });\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", Object.assign({}, getRootProps(), {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"input\", Object.assign({}, getInputProps(), {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }\n  })), isDragActive ? /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 11\n    }\n  }, \"Drop the files here ...\") : /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 11\n    }\n  }, \"Drag 'n' drop some files here, or click to select files\")));\n}","map":{"version":3,"names":["React","useCallback","useState","useDropzone","Predict","selectedImages","setSelectedImages","onDrop","acceptedFiles","map","file","Object","assign","preview","URL","createObjectURL","getRootProps","getInputProps","isDragActive","selectedImage","width"],"sources":["C:/Users/rianw/Dev Projects/crop-ai/frontend/crop-ai/src/Predict.js"],"sourcesContent":["import React, { useCallback, useState } from \"react\";\r\nimport { useDropzone } from \"react-dropzone\";\r\n\r\nexport default function Predict() {\r\n  const [selectedImages, setSelectedImages] = useState([])\r\n  const onDrop = useCallback(acceptedFiles => {\r\n   setSelectedImages(acceptedFiles.map(file => \r\n    Object.assign(file, {\r\n      preview:URL.createObjectURL(file)\r\n    })))\r\n  }, [])\r\n  const {getRootProps, getInputProps, isDragActive} = useDropzone({onDrop})\r\n  const selectedImage = selectedImages?.map(file =>(\r\n    <div>\r\n      <img src={file.preview} style={{ width:\"200px\"}} alt=\"\" />\r\n    </div>\r\n  ))\r\n\r\n  return (\r\n    <div>\r\n      <div {...getRootProps()}>\r\n      <input {...getInputProps()} />\r\n      {\r\n        isDragActive ?\r\n          <p>Drop the files here ...</p> :\r\n          <p>Drag 'n' drop some files here, or click to select files</p>\r\n      }\r\n    </div>\r\n\r\n    </div>\r\n  );\r\n}\r\n"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,WAAhB,EAA6BC,QAA7B,QAA6C,OAA7C;AACA,SAASC,WAAT,QAA4B,gBAA5B;AAEA,eAAe,SAASC,OAAT,GAAmB;EAAA;;EAAA,gBACYF,QAAQ,CAAC,EAAD,CADpB;EAAA;EAAA,IACzBG,cADyB;EAAA,IACTC,iBADS;;EAEhC,IAAMC,MAAM,GAAGN,WAAW,CAAC,UAAAO,aAAa,EAAI;IAC3CF,iBAAiB,CAACE,aAAa,CAACC,GAAd,CAAkB,UAAAC,IAAI;MAAA,OACvCC,MAAM,CAACC,MAAP,CAAcF,IAAd,EAAoB;QAClBG,OAAO,EAACC,GAAG,CAACC,eAAJ,CAAoBL,IAApB;MADU,CAApB,CADuC;IAAA,CAAtB,CAAD,CAAjB;EAIA,CALyB,EAKvB,EALuB,CAA1B;;EAFgC,mBAQoBP,WAAW,CAAC;IAACI,MAAM,EAANA;EAAD,CAAD,CAR/B;EAAA,IAQzBS,YARyB,gBAQzBA,YARyB;EAAA,IAQXC,aARW,gBAQXA,aARW;EAAA,IAQIC,YARJ,gBAQIA,YARJ;;EAShC,IAAMC,aAAa,GAAGd,cAAc,EAAEI,GAAhB,CAAoB,UAAAC,IAAI;IAAA,oBAC5C;MAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IAAA,gBACE;MAAK,GAAG,EAAEA,IAAI,CAACG,OAAf;MAAwB,KAAK,EAAE;QAAEO,KAAK,EAAC;MAAR,CAA/B;MAAiD,GAAG,EAAC,EAArD;MAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IAAA,EADF,CAD4C;EAAA,CAAxB,CAAtB;EAMA,oBACE;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,gBACE,6CAASJ,YAAY,EAArB;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,iBACA,+CAAWC,aAAa,EAAxB;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,GADA,EAGEC,YAAY,gBACV;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,6BADU,gBAEV;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,6DALJ,CADF,CADF;AAaD"},"metadata":{},"sourceType":"module"}
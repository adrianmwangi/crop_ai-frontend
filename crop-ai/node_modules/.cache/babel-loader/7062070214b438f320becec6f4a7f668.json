{"ast":null,"code":"import _slicedToArray from \"C:\\\\Users\\\\rianw\\\\Dev Projects\\\\crop-ai\\\\frontend\\\\crop-ai\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\rianw\\\\Dev Projects\\\\crop-ai\\\\frontend\\\\crop-ai\\\\src\\\\contexts\\\\AuthContext.js\";\nimport React, { useContext, useEffect, useState } from \"react\";\nimport { createUserWithEmailAndPassword, onAuthStateChanged, sendPasswordResetEmail, signInWithEmailAndPassword, signOut, sendEmailVerification } from \"firebase/auth\";\nimport { get, child, getDatabase, query, ref, set, remove, equalTo, onValue } from \"firebase/database\";\nimport { auth } from \"../firebase\";\nvar AuthContext = React.createContext();\nexport function useAuth() {\n  return useContext(AuthContext);\n}\nexport function AuthProvider(_ref) {\n  var children = _ref.children;\n\n  var _useState = useState(),\n      _useState2 = _slicedToArray(_useState, 2),\n      currentUser = _useState2[0],\n      setCurrentUser = _useState2[1];\n\n  var _useState3 = useState(true),\n      _useState4 = _slicedToArray(_useState3, 2),\n      loading = _useState4[0],\n      setLoading = _useState4[1];\n\n  var usrFlag;\n  var dbRef = ref(getDatabase()); //split user email\n\n  function splitEmail(email) {\n    var emailString = email.split(\"@\");\n    return emailString;\n  } //function to hash user id\n\n\n  function hashCode(str) {\n    return str.split(\"\").reduce(function (prevHash, currVal) {\n      return (prevHash << 5) - prevHash + currVal.charCodeAt(0) | 0;\n    }, 0);\n  } //function to read user data to assign dash\n\n\n  function readUserData(email) {\n    var emailString = splitEmail(email);\n    var userList = [];\n    get(child(dbRef, \"users/\".concat(emailString[0]))).then(function (snapshot) {\n      if (snapshot.exists()) {\n        var x = snapshot.val();\n\n        for (var id in x) {\n          userList.push(x[id]);\n        }\n\n        if (userList[0].split(\"-\")[0] === \"CL\") {\n          usrFlag = \"client\";\n        } else if (userList[0].split(\"-\")[0] === \"ADM\") {\n          usrFlag = \"admin\";\n        }\n      } else {\n        console.log(\"No data available\");\n      }\n    });\n    return usrFlag;\n  } //functin to read and display users\n\n\n  function readUser() {\n    return get(child(dbRef, \"/users/\")).then(function (snapshot) {\n      if (snapshot.exists()) {\n        console.log(snapshot.val());\n      } else {\n        console.log(\"No data available\");\n      }\n    }).catch(function (error) {\n      console.error(error);\n    });\n  } //function  to write new users in realtime db\n\n\n  function writeUserData(email, encodedEmail, userName) {\n    var db = getDatabase();\n    var emailString = splitEmail(email);\n    console.log(emailString);\n    set(ref(db, \"/users/\" + emailString[0]), {\n      UserId: encodedEmail,\n      email: email,\n      userName: userName\n    });\n  } //Function to delete users from db\n\n\n  function delUser(id) {\n    console.log(\"dele id from auth context\", id);\n    return remove(ref(getDatabase(), \"/users/\" + id));\n  } //function to signup new user\n\n\n  function signup(email, password, encodedEmail, userName) {\n    writeUserData(email, encodedEmail, userName);\n    return createUserWithEmailAndPassword(auth, email, password);\n  } //function to login existing user\n\n\n  function login(email, password) {\n    readUserData(email);\n    return signInWithEmailAndPassword(auth, email, password);\n  } //function to log out\n\n\n  function logout() {\n    return auth.signOut();\n  } //function to verify email\n\n\n  function verifyEmail() {\n    return sendEmailVerification(auth.currentUser);\n  } //function to reset user password\n\n\n  function resetPassword(email) {\n    return sendPasswordResetEmail(auth, email);\n  }\n\n  useEffect(function () {\n    var unsubscribe = auth.onAuthStateChanged(function (user) {\n      setCurrentUser(user);\n      setLoading(false);\n    });\n    return unsubscribe;\n  }, []);\n  var value = {\n    currentUser: currentUser,\n    signup: signup,\n    login: login,\n    logout: logout,\n    verifyEmail: verifyEmail,\n    resetPassword: resetPassword,\n    hashCode: hashCode,\n    usrFlag: usrFlag,\n    readUserData: readUserData,\n    writeUserData: writeUserData,\n    delUser: delUser,\n    readUser: readUser\n  };\n  return /*#__PURE__*/React.createElement(AuthContext.Provider, {\n    value: value,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 5\n    }\n  }, !loading && children);\n}","map":{"version":3,"names":["React","useContext","useEffect","useState","createUserWithEmailAndPassword","onAuthStateChanged","sendPasswordResetEmail","signInWithEmailAndPassword","signOut","sendEmailVerification","get","child","getDatabase","query","ref","set","remove","equalTo","onValue","auth","AuthContext","createContext","useAuth","AuthProvider","children","currentUser","setCurrentUser","loading","setLoading","usrFlag","dbRef","splitEmail","email","emailString","split","hashCode","str","reduce","prevHash","currVal","charCodeAt","readUserData","userList","then","snapshot","exists","x","val","id","push","console","log","readUser","catch","error","writeUserData","encodedEmail","userName","db","UserId","delUser","signup","password","login","logout","verifyEmail","resetPassword","unsubscribe","user","value"],"sources":["C:/Users/rianw/Dev Projects/crop-ai/frontend/crop-ai/src/contexts/AuthContext.js"],"sourcesContent":["import React, { useContext, useEffect, useState } from \"react\";\nimport {\n  createUserWithEmailAndPassword,\n  onAuthStateChanged,\n  sendPasswordResetEmail,\n  signInWithEmailAndPassword,\n  signOut,\n  sendEmailVerification,\n} from \"firebase/auth\";\nimport { get, child, getDatabase, query, ref, set, remove, equalTo, onValue } from \"firebase/database\";\nimport { auth } from \"../firebase\";\n\nconst AuthContext = React.createContext();\n\nexport function useAuth() {\n  return useContext(AuthContext);\n}\n\nexport function AuthProvider({ children }) {\n  const [currentUser, setCurrentUser] = useState();\n  const [loading, setLoading] = useState(true);\n\n  let usrFlag;\n  const dbRef = ref(getDatabase());\n//split user email\n  function splitEmail(email) {\n    const emailString = email.split(\"@\");\n    return emailString;\n  }\n  //function to hash user id\n  function hashCode(str) {\n    return str\n      .split(\"\")\n      .reduce(\n        (prevHash, currVal) =>\n          ((prevHash << 5) - prevHash + currVal.charCodeAt(0)) | 0,\n        0\n      );\n  }\n  //function to read user data to assign dash\n  function readUserData(email) {\n    const emailString = splitEmail(email);\n    let userList = [];\n    get(child(dbRef, `users/${emailString[0]}`)).then((snapshot) => {\n      if (snapshot.exists()) {\n        let x = snapshot.val();\n        for (let id in x) {\n          userList.push(x[id]);\n        }\n\n        if (userList[0].split(\"-\")[0] === \"CL\") {\n          usrFlag = \"client\";\n        } else if (userList[0].split(\"-\")[0] === \"ADM\") {\n          usrFlag = \"admin\";\n        }\n      } else {\n        console.log(\"No data available\");\n      }\n    });\n    return usrFlag;\n  }\n\n  //functin to read and display users\n  function readUser(){\n\n  return get(child(dbRef, `/users/`)).then((snapshot) => {\n    if (snapshot.exists()) {\n      console.log(snapshot.val())\n\n      \n    } else {\n      console.log(\"No data available\");\n    } \n\n  }).catch((error) => {\n    console.error(error);\n  });\n  }\n\n  //function  to write new users in realtime db\n  function writeUserData(email, encodedEmail, userName) { \n    const db = getDatabase();\n    const emailString = splitEmail(email);\n    console.log(emailString);\n    set(ref(db, \"/users/\" + emailString[0]), {\n      UserId: encodedEmail,\n      email: email,\n      userName: userName\n    });\n  }\n\n  //Function to delete users from db\n  function delUser(id) {\n    console.log(\"dele id from auth context\", id);\n    return remove(ref(getDatabase(), \"/users/\" + id));\n  }\n  //function to signup new user\n  function signup(email, password, encodedEmail, userName) {\n    writeUserData(email, encodedEmail, userName);\n    return createUserWithEmailAndPassword(auth, email, password);\n  }\n  //function to login existing user\n  function login(email, password) {\n    readUserData(email);\n    return signInWithEmailAndPassword(auth, email, password);\n  }\n  //function to log out\n  function logout() {\n    return auth.signOut();\n  }\n  //function to verify email\n  function verifyEmail() {\n    return sendEmailVerification(auth.currentUser);\n  }\n  //function to reset user password\n  function resetPassword(email) {\n    return sendPasswordResetEmail(auth, email);\n  }\n\n  useEffect(() => {\n    const unsubscribe = auth.onAuthStateChanged((user) => {\n      setCurrentUser(user);\n      setLoading(false);\n    });\n    return unsubscribe;\n  }, []);\n\n  const value = {\n    currentUser,\n    signup,\n    login,\n    logout,\n    verifyEmail,\n    resetPassword,\n    hashCode,\n    usrFlag,\n    readUserData,\n    writeUserData,\n    delUser,\n    readUser,\n  };\n\n  return (\n    <AuthContext.Provider value={value}>\n      {!loading && children}\n    </AuthContext.Provider>\n  );\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import _slicedToArray from \"C:\\\\Users\\\\rianw\\\\Dev Projects\\\\crop-ai\\\\frontend\\\\crop-ai\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\rianw\\\\Dev Projects\\\\crop-ai\\\\frontend\\\\crop-ai\\\\src\\\\contexts\\\\AuthContext.js\";\nimport React, { useContext, useEffect, useState } from \"react\";\nimport { createUserWithEmailAndPassword, onAuthStateChanged, sendPasswordResetEmail, signInWithEmailAndPassword, signOut, sendEmailVerification } from \"firebase/auth\";\nimport { get, child, getDatabase, query, ref, set, orderByChild, remove, equalTo, onValue, orderByKey } from \"firebase/database\";\nimport { auth } from \"../firebase\";\nvar AuthContext = React.createContext();\nexport function useAuth() {\n  return useContext(AuthContext);\n}\nexport function AuthProvider(_ref) {\n  var children = _ref.children;\n\n  var _useState = useState(),\n      _useState2 = _slicedToArray(_useState, 2),\n      currentUser = _useState2[0],\n      setCurrentUser = _useState2[1];\n\n  var _useState3 = useState(true),\n      _useState4 = _slicedToArray(_useState3, 2),\n      loading = _useState4[0],\n      setLoading = _useState4[1];\n\n  var _useState5 = useState(),\n      _useState6 = _slicedToArray(_useState5, 2),\n      usrData = _useState6[0],\n      setUsrData = _useState6[1];\n\n  var usrFlag;\n  var dbRef = ref(getDatabase()); //split user email\n\n  function splitEmail(email) {\n    var emailString = email.split(\"@\");\n    return emailString;\n  } //function to hash user id\n\n\n  function hashCode(str) {\n    return str.split(\"\").reduce(function (prevHash, currVal) {\n      return (prevHash << 5) - prevHash + currVal.charCodeAt(0) | 0;\n    }, 0);\n  } //function to read user data to assign dash\n\n\n  function readUserData(email) {\n    var emailString = splitEmail(email);\n    var userList = [];\n    get(child(dbRef, \"users/\".concat(emailString[0]))).then(function (snapshot) {\n      if (snapshot.exists()) {\n        var x = snapshot.val();\n\n        for (var id in x) {\n          userList.push(x[id]);\n        }\n\n        if (userList[1].split(\"-\")[0] === \"CL\") {\n          usrFlag = \"client\";\n        } else if (userList[1].split(\"-\")[0] === \"ADM\") {\n          usrFlag = \"admin\";\n        }\n      } else {\n        console.log(\"No data available\");\n      }\n    });\n    return usrFlag;\n  } //function to query list of users in realtime db\n\n\n  function readUser() {\n    var usrQueryRef = query(ref(getDatabase(), 'users/'), orderByChild('userName'));\n    console.log(usrQueryRef);\n    onValue(usrQueryRef, function (snapshot) {\n      snapshot.forEach(function (childSnapshot) {\n        var childKey = childSnapshot.key;\n        var childData = childSnapshot.val();\n        console.log(childKey);\n      });\n    });\n  } //function  to write new users in realtime db\n\n\n  function writeUserData(email, userId, userName) {\n    var db = getDatabase();\n    var emailString = splitEmail(email);\n    console.log(emailString);\n    set(ref(db, \"/users/\" + emailString[0]), {\n      email: email,\n      userId: userId,\n      userName: userName\n    });\n  } //Function to delete users from db\n\n\n  function delUser(id) {\n    console.log(\"dele id from auth context\", id);\n    return remove(ref(getDatabase(), \"/users/\" + id));\n  } //function to signup new user\n\n\n  function signup(email, password, userId, userName) {\n    writeUserData(email, userId, userName);\n    return createUserWithEmailAndPassword(auth, email, password);\n  } //function to login existing user\n\n\n  function login(email, password) {\n    readUserData(email);\n    return signInWithEmailAndPassword(auth, email, password);\n  } //function to log out\n\n\n  function logout() {\n    return auth.signOut();\n  } //function to verify email\n\n\n  function verifyEmail() {\n    return sendEmailVerification(auth.currentUser);\n  } //function to reset user password\n\n\n  function resetPassword(email) {\n    return sendPasswordResetEmail(auth, email);\n  }\n\n  useEffect(function () {\n    var unsubscribe = auth.onAuthStateChanged(function (user) {\n      setCurrentUser(user);\n      setLoading(false);\n    });\n    return unsubscribe;\n  }, []);\n  var value = {\n    currentUser: currentUser,\n    signup: signup,\n    login: login,\n    logout: logout,\n    verifyEmail: verifyEmail,\n    resetPassword: resetPassword,\n    hashCode: hashCode,\n    usrFlag: usrFlag,\n    readUserData: readUserData,\n    writeUserData: writeUserData,\n    delUser: delUser,\n    readUser: readUser,\n    usrData: usrData\n  };\n  return /*#__PURE__*/React.createElement(AuthContext.Provider, {\n    value: value,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 5\n    }\n  }, !loading && children);\n}","map":{"version":3,"names":["React","useContext","useEffect","useState","createUserWithEmailAndPassword","onAuthStateChanged","sendPasswordResetEmail","signInWithEmailAndPassword","signOut","sendEmailVerification","get","child","getDatabase","query","ref","set","orderByChild","remove","equalTo","onValue","orderByKey","auth","AuthContext","createContext","useAuth","AuthProvider","children","currentUser","setCurrentUser","loading","setLoading","usrData","setUsrData","usrFlag","dbRef","splitEmail","email","emailString","split","hashCode","str","reduce","prevHash","currVal","charCodeAt","readUserData","userList","then","snapshot","exists","x","val","id","push","console","log","readUser","usrQueryRef","forEach","childSnapshot","childKey","key","childData","writeUserData","userId","userName","db","delUser","signup","password","login","logout","verifyEmail","resetPassword","unsubscribe","user","value"],"sources":["C:/Users/rianw/Dev Projects/crop-ai/frontend/crop-ai/src/contexts/AuthContext.js"],"sourcesContent":["import React, { useContext, useEffect, useState } from \"react\";\nimport {\n  createUserWithEmailAndPassword,\n  onAuthStateChanged,\n  sendPasswordResetEmail,\n  signInWithEmailAndPassword,\n  signOut,\n  sendEmailVerification,\n} from \"firebase/auth\";\nimport {\n  get,\n  child,\n  getDatabase,\n  query,\n  ref,\n  set,\n  orderByChild,\n  remove,\n  equalTo,\n  onValue,\n  orderByKey,\n} from \"firebase/database\";\nimport { auth } from \"../firebase\";\n\nconst AuthContext = React.createContext();\n\nexport function useAuth() {\n  return useContext(AuthContext);\n}\n\nexport function AuthProvider({ children }) {\n  const [currentUser, setCurrentUser] = useState();\n  const [loading, setLoading] = useState(true);\n  const [usrData, setUsrData] = useState();\n\n  let usrFlag;\n  const dbRef = ref(getDatabase());\n  //split user email\n  function splitEmail(email) {\n    const emailString = email.split(\"@\");\n    return emailString;\n  }\n  //function to hash user id\n  function hashCode(str) {\n    return str\n      .split(\"\")\n      .reduce(\n        (prevHash, currVal) =>\n          ((prevHash << 5) - prevHash + currVal.charCodeAt(0)) | 0,\n        0\n      );\n  }\n  //function to read user data to assign dash\n  function readUserData(email) {\n    const emailString = splitEmail(email);\n    let userList = [];\n    get(child(dbRef, `users/${emailString[0]}`)).then((snapshot) => {\n      if (snapshot.exists()) {\n        let x = snapshot.val();\n        for (let id in x) {\n          userList.push(x[id]);\n        }\n\n        if (userList[1].split(\"-\")[0] === \"CL\") {\n          usrFlag = \"client\";\n        } else if (userList[1].split(\"-\")[0] === \"ADM\") {\n          usrFlag = \"admin\";\n        }\n      } else {\n        console.log(\"No data available\");\n      }\n    });\n    return usrFlag;\n  }\n  //function to query list of users in realtime db\n  function readUser() {\n   \n    const usrQueryRef = query(ref(getDatabase(), 'users/' ), orderByChild('userName'));\n    console.log(usrQueryRef)\n    onValue(\n      usrQueryRef,\n      (snapshot) => {\n        snapshot.forEach((childSnapshot) => {\n          const childKey = childSnapshot.key;\n          const childData = childSnapshot.val();\n          console.log(childKey)\n        });\n      }\n    );\n  }\n  //function  to write new users in realtime db\n  function writeUserData(email, userId, userName) {\n    const db = getDatabase();\n    const emailString = splitEmail(email);\n    console.log(emailString);\n    set(ref(db, \"/users/\" + emailString[0]), {\n      email: email,\n      userId: userId,\n      userName: userName,\n    });\n  }\n\n  //Function to delete users from db\n  function delUser(id) {\n    console.log(\"dele id from auth context\", id);\n    return remove(ref(getDatabase(), \"/users/\" + id));\n  }\n  //function to signup new user\n  function signup(email, password, userId, userName) {\n    writeUserData(email, userId, userName);\n    return createUserWithEmailAndPassword(auth, email, password);\n  }\n  //function to login existing user\n  function login(email, password) {\n    readUserData(email);\n    return signInWithEmailAndPassword(auth, email, password);\n  }\n  //function to log out\n  function logout() {\n    return auth.signOut();\n  }\n  //function to verify email\n  function verifyEmail() {\n    return sendEmailVerification(auth.currentUser);\n  }\n  //function to reset user password\n  function resetPassword(email) {\n    return sendPasswordResetEmail(auth, email);\n  }\n\n  useEffect(() => {\n    const unsubscribe = auth.onAuthStateChanged((user) => {\n      setCurrentUser(user);\n      setLoading(false);\n    });\n    return unsubscribe;\n  }, []);\n\n  const value = {\n    currentUser,\n    signup,\n    login,\n    logout,\n    verifyEmail,\n    resetPassword,\n    hashCode,\n    usrFlag,\n    readUserData,\n    writeUserData,\n    delUser,\n    readUser,\n    usrData,\n  };\n\n  return (\n    <AuthContext.Provider value={value}>\n      {!loading && children}\n    </AuthContext.Provider>\n  );\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}
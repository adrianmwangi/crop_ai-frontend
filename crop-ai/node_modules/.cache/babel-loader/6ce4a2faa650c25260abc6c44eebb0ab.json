{"ast":null,"code":"import _slicedToArray from \"C:\\\\Users\\\\rianw\\\\Dev Projects\\\\crop-ai\\\\frontend\\\\crop-ai\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\rianw\\\\Dev Projects\\\\crop-ai\\\\frontend\\\\crop-ai\\\\src\\\\contexts\\\\AuthContext.js\";\nimport React, { useContext, useEffect, useState } from \"react\";\nimport { createUserWithEmailAndPassword, onAuthStateChanged, sendPasswordResetEmail, signInWithEmailAndPassword, signOut, sendEmailVerification } from \"firebase/auth\";\nimport { get, child, getDatabase, query, ref, set, orderByChild, remove, equalTo, onValue } from \"firebase/database\";\nimport { auth } from \"../firebase\";\nvar AuthContext = React.createContext();\nexport function useAuth() {\n  return useContext(AuthContext);\n}\nexport function AuthProvider(_ref) {\n  var children = _ref.children;\n\n  var _useState = useState(),\n      _useState2 = _slicedToArray(_useState, 2),\n      currentUser = _useState2[0],\n      setCurrentUser = _useState2[1];\n\n  var _useState3 = useState(true),\n      _useState4 = _slicedToArray(_useState3, 2),\n      loading = _useState4[0],\n      setLoading = _useState4[1];\n\n  var usrFlag;\n  var dbRef = ref(getDatabase()); //split user email\n\n  function splitEmail(email) {\n    var emailString = email.split(\"@\");\n    return emailString;\n  } //function to hash user id\n\n\n  function hashCode(str) {\n    return str.split(\"\").reduce(function (prevHash, currVal) {\n      return (prevHash << 5) - prevHash + currVal.charCodeAt(0) | 0;\n    }, 0);\n  } //function to read user data to assign dash\n\n\n  function readUserData(email) {\n    var emailString = splitEmail(email);\n    var userList = [];\n    get(child(dbRef, \"users/\".concat(emailString[0]))).then(function (snapshot) {\n      if (snapshot.exists()) {\n        var x = snapshot.val();\n\n        for (var id in x) {\n          userList.push(x[id]);\n        }\n\n        if (userList[0].split(\"-\")[0] === \"CL\") {\n          usrFlag = \"client\";\n        } else if (userList[0].split(\"-\")[0] === \"ADM\") {\n          usrFlag = \"admin\";\n        }\n      } else {\n        console.log(\"No data available\");\n      }\n    });\n    return usrFlag;\n  } //function to query list of users in realtime db\n\n\n  function readUser() {\n    var usrQueryRef = query(ref(getDatabase(), \"users\"), orderByChild(\"userName\"));\n    var usrData = onValue(usrQueryRef, function (snapshot) {\n      snapshot.forEach(function (childSnapshot) {\n        var childKey = childSnapshot.key;\n        var childData = childSnapshot.val();\n        var email = childData.email;\n        var userId = childKey.userId;\n        console.log(\"rid: \\n\", userId);\n      });\n    });\n    return usrData;\n  } //function  to write new users in realtime db\n\n\n  function writeUserData(email, encodedEmail, userName) {\n    var db = getDatabase();\n    var emailString = splitEmail(email);\n    console.log(emailString);\n    set(ref(db, \"/users/\" + emailString[0]), {\n      UserId: encodedEmail,\n      email: email,\n      userName: userName\n    });\n  } //Function to delete users from db\n\n\n  function delUser(id) {\n    console.log(\"dele id from auth context\", id);\n    return remove(ref(getDatabase(), \"/users/\" + id));\n  } //function to signup new user\n\n\n  function signup(email, password, encodedEmail, userName) {\n    writeUserData(email, encodedEmail, userName);\n    return createUserWithEmailAndPassword(auth, email, password);\n  } //function to login existing user\n\n\n  function login(email, password) {\n    readUserData(email);\n    return signInWithEmailAndPassword(auth, email, password);\n  } //function to log out\n\n\n  function logout() {\n    return auth.signOut();\n  } //function to verify email\n\n\n  function verifyEmail() {\n    return sendEmailVerification(auth.currentUser);\n  } //function to reset user password\n\n\n  function resetPassword(email) {\n    return sendPasswordResetEmail(auth, email);\n  }\n\n  useEffect(function () {\n    var unsubscribe = auth.onAuthStateChanged(function (user) {\n      setCurrentUser(user);\n      setLoading(false);\n    });\n    return unsubscribe;\n  }, []);\n  var value = {\n    currentUser: currentUser,\n    signup: signup,\n    login: login,\n    logout: logout,\n    verifyEmail: verifyEmail,\n    resetPassword: resetPassword,\n    hashCode: hashCode,\n    usrFlag: usrFlag,\n    readUserData: readUserData,\n    writeUserData: writeUserData,\n    delUser: delUser,\n    readUser: readUser\n  };\n  return /*#__PURE__*/React.createElement(AuthContext.Provider, {\n    value: value,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 5\n    }\n  }, !loading && children);\n}","map":{"version":3,"names":["React","useContext","useEffect","useState","createUserWithEmailAndPassword","onAuthStateChanged","sendPasswordResetEmail","signInWithEmailAndPassword","signOut","sendEmailVerification","get","child","getDatabase","query","ref","set","orderByChild","remove","equalTo","onValue","auth","AuthContext","createContext","useAuth","AuthProvider","children","currentUser","setCurrentUser","loading","setLoading","usrFlag","dbRef","splitEmail","email","emailString","split","hashCode","str","reduce","prevHash","currVal","charCodeAt","readUserData","userList","then","snapshot","exists","x","val","id","push","console","log","readUser","usrQueryRef","usrData","forEach","childSnapshot","childKey","key","childData","userId","writeUserData","encodedEmail","userName","db","UserId","delUser","signup","password","login","logout","verifyEmail","resetPassword","unsubscribe","user","value"],"sources":["C:/Users/rianw/Dev Projects/crop-ai/frontend/crop-ai/src/contexts/AuthContext.js"],"sourcesContent":["import React, { useContext, useEffect, useState } from \"react\";\nimport {\n  createUserWithEmailAndPassword,\n  onAuthStateChanged,\n  sendPasswordResetEmail,\n  signInWithEmailAndPassword,\n  signOut,\n  sendEmailVerification,\n} from \"firebase/auth\";\nimport {\n  get,\n  child,\n  getDatabase,\n  query,\n  ref,\n  set,\n  orderByChild,\n  remove,\n  equalTo,\n  onValue,\n} from \"firebase/database\";\nimport { auth } from \"../firebase\";\n\nconst AuthContext = React.createContext();\n\nexport function useAuth() {\n  return useContext(AuthContext);\n}\n\nexport function AuthProvider({ children }) {\n  const [currentUser, setCurrentUser] = useState();\n  const [loading, setLoading] = useState(true);\n\n  let usrFlag;\n  const dbRef = ref(getDatabase());\n  //split user email\n  function splitEmail(email) {\n    const emailString = email.split(\"@\");\n    return emailString;\n  }\n  //function to hash user id\n  function hashCode(str) {\n    return str\n      .split(\"\")\n      .reduce(\n        (prevHash, currVal) =>\n          ((prevHash << 5) - prevHash + currVal.charCodeAt(0)) | 0,\n        0\n      );\n  }\n  //function to read user data to assign dash\n  function readUserData(email) {\n    const emailString = splitEmail(email);\n    let userList = [];\n    get(child(dbRef, `users/${emailString[0]}`)).then((snapshot) => {\n      if (snapshot.exists()) {\n        let x = snapshot.val();\n        for (let id in x) {\n          userList.push(x[id]);\n        }\n\n        if (userList[0].split(\"-\")[0] === \"CL\") {\n          usrFlag = \"client\";\n        } else if (userList[0].split(\"-\")[0] === \"ADM\") {\n          usrFlag = \"admin\";\n        }\n      } else {\n        console.log(\"No data available\");\n      }\n    });\n    return usrFlag;\n  }\n  //function to query list of users in realtime db\n  function readUser() {\n    const usrQueryRef = query(\n      ref(getDatabase(), `users`),\n      orderByChild(\"userName\")\n    );\n\n    let usrData = onValue(usrQueryRef, (snapshot) => {\n      snapshot.forEach((childSnapshot) => {\n        const childKey = childSnapshot.key;\n        const childData = childSnapshot.val();\n\n        let email = childData.email;\n        let userId = childKey.userId;\n\n        console.log(\"rid: \\n\", userId);\n      });\n    });\n\n    return usrData;\n  }\n\n  //function  to write new users in realtime db\n  function writeUserData(email, encodedEmail, userName) {\n    const db = getDatabase();\n    const emailString = splitEmail(email);\n    console.log(emailString);\n    set(ref(db, \"/users/\" + emailString[0]), {\n      UserId: encodedEmail,\n      email: email,\n      userName: userName,\n    });\n  }\n\n  //Function to delete users from db\n  function delUser(id) {\n    console.log(\"dele id from auth context\", id);\n    return remove(ref(getDatabase(), \"/users/\" + id));\n  }\n  //function to signup new user\n  function signup(email, password, encodedEmail, userName) {\n    writeUserData(email, encodedEmail, userName);\n    return createUserWithEmailAndPassword(auth, email, password);\n  }\n  //function to login existing user\n  function login(email, password) {\n    readUserData(email);\n    return signInWithEmailAndPassword(auth, email, password);\n  }\n  //function to log out\n  function logout() {\n    return auth.signOut();\n  }\n  //function to verify email\n  function verifyEmail() {\n    return sendEmailVerification(auth.currentUser);\n  }\n  //function to reset user password\n  function resetPassword(email) {\n    return sendPasswordResetEmail(auth, email);\n  }\n\n  useEffect(() => {\n    const unsubscribe = auth.onAuthStateChanged((user) => {\n      setCurrentUser(user);\n      setLoading(false);\n    });\n    return unsubscribe;\n  }, []);\n\n  const value = {\n    currentUser,\n    signup,\n    login,\n    logout,\n    verifyEmail,\n    resetPassword,\n    hashCode,\n    usrFlag,\n    readUserData,\n    writeUserData,\n    delUser,\n    readUser,\n  };\n\n  return (\n    <AuthContext.Provider value={value}>\n      {!loading && children}\n    </AuthContext.Provider>\n  );\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}
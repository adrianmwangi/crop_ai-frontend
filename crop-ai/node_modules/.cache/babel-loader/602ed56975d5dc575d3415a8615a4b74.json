{"ast":null,"code":"import _slicedToArray from \"C:\\\\Users\\\\rianw\\\\Dev Projects\\\\crop-ai\\\\frontend\\\\crop-ai\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\rianw\\\\Dev Projects\\\\crop-ai\\\\frontend\\\\crop-ai\\\\src\\\\Predict.js\";\nimport React, { useCallback, useState } from \"react\";\nimport { useDropzone } from \"react-dropzone\";\nimport { storage, db } from \"./firebase\";\nimport { addDoc, collection, serverTimeStamp } from \"firebase/firest\";\nexport default function Predict() {\n  var _this = this;\n\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      selectedImage = _useState2[0],\n      setSelectedImage = _useState2[1];\n\n  console.log('db', db);\n  console.log('storage', storage);\n  var onDrop = useCallback(function (acceptedFiles) {\n    setSelectedImage(acceptedFiles.map(function (file) {\n      return Object.assign(file, {\n        preview: URL.createObjectURL(file)\n      });\n    }));\n  }, []);\n\n  var _useDropzone = useDropzone({\n    onDrop: onDrop\n  }),\n      getRootProps = _useDropzone.getRootProps,\n      getInputProps = _useDropzone.getInputProps;\n\n  var selected_images = selectedImage.map(function (file) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 5\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      src: file.preview,\n      style: {\n        width: \"200px\"\n      },\n      alt: \"\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 9\n      }\n    }));\n  });\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", Object.assign({}, getRootProps(), {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"input\", Object.assign({}, getInputProps(), {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 9\n    }\n  }, \"Drop the files here ...\"), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 9\n    }\n  }, \"Drag 'n' drop some files here, or click to select files\")), /*#__PURE__*/React.createElement(\"button\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }\n  }, \"Post\"), selected_images);\n}","map":{"version":3,"names":["React","useCallback","useState","useDropzone","storage","db","addDoc","collection","serverTimeStamp","Predict","selectedImage","setSelectedImage","console","log","onDrop","acceptedFiles","map","file","Object","assign","preview","URL","createObjectURL","getRootProps","getInputProps","selected_images","width"],"sources":["C:/Users/rianw/Dev Projects/crop-ai/frontend/crop-ai/src/Predict.js"],"sourcesContent":["import React, { useCallback, useState } from \"react\";\r\nimport { useDropzone } from \"react-dropzone\";\r\nimport { storage, db } from \"./firebase\";\r\nimport {addDoc, collection, serverTimeStamp} from \"firebase/firest\"\r\n\r\nexport default function Predict() {\r\n  const [selectedImage, setSelectedImage] = useState([]);\r\n  console.log('db', db)\r\n  console.log('storage', storage)\r\n  const onDrop = useCallback(acceptedFiles => {\r\n    setSelectedImage(acceptedFiles.map(file =>\r\n        Object.assign(file, {\r\n            preview:URL.createObjectURL(file)\r\n        } )\r\n        ))\r\n  }, [])\r\n  const { getRootProps, getInputProps } = useDropzone({ onDrop });\r\n  const selected_images = selectedImage.map(file => (\r\n    <div>\r\n        <img src={file.preview} style={{width:\"200px\"}} alt=\"\" />\r\n    </div>\r\n  ))\r\n  return (\r\n    <div>\r\n      <div {...getRootProps()}>\r\n        <input {...getInputProps()} />\r\n        <p>Drop the files here ...</p> \r\n        <p>Drag 'n' drop some files here, or click to select files</p>\r\n      </div>\r\n      <button>Post</button>\r\n      {selected_images}\r\n    </div>\r\n  );\r\n}\r\n"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,WAAhB,EAA6BC,QAA7B,QAA6C,OAA7C;AACA,SAASC,WAAT,QAA4B,gBAA5B;AACA,SAASC,OAAT,EAAkBC,EAAlB,QAA4B,YAA5B;AACA,SAAQC,MAAR,EAAgBC,UAAhB,EAA4BC,eAA5B,QAAkD,iBAAlD;AAEA,eAAe,SAASC,OAAT,GAAmB;EAAA;;EAAA,gBACUP,QAAQ,CAAC,EAAD,CADlB;EAAA;EAAA,IACzBQ,aADyB;EAAA,IACVC,gBADU;;EAEhCC,OAAO,CAACC,GAAR,CAAY,IAAZ,EAAkBR,EAAlB;EACAO,OAAO,CAACC,GAAR,CAAY,SAAZ,EAAuBT,OAAvB;EACA,IAAMU,MAAM,GAAGb,WAAW,CAAC,UAAAc,aAAa,EAAI;IAC1CJ,gBAAgB,CAACI,aAAa,CAACC,GAAd,CAAkB,UAAAC,IAAI;MAAA,OACnCC,MAAM,CAACC,MAAP,CAAcF,IAAd,EAAoB;QAChBG,OAAO,EAACC,GAAG,CAACC,eAAJ,CAAoBL,IAApB;MADQ,CAApB,CADmC;IAAA,CAAtB,CAAD,CAAhB;EAKD,CANyB,EAMvB,EANuB,CAA1B;;EAJgC,mBAWQd,WAAW,CAAC;IAAEW,MAAM,EAANA;EAAF,CAAD,CAXnB;EAAA,IAWxBS,YAXwB,gBAWxBA,YAXwB;EAAA,IAWVC,aAXU,gBAWVA,aAXU;;EAYhC,IAAMC,eAAe,GAAGf,aAAa,CAACM,GAAd,CAAkB,UAAAC,IAAI;IAAA,oBAC5C;MAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IAAA,gBACI;MAAK,GAAG,EAAEA,IAAI,CAACG,OAAf;MAAwB,KAAK,EAAE;QAACM,KAAK,EAAC;MAAP,CAA/B;MAAgD,GAAG,EAAC,EAApD;MAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IAAA,EADJ,CAD4C;EAAA,CAAtB,CAAxB;EAKA,oBACE;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,gBACE,6CAASH,YAAY,EAArB;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,iBACE,+CAAWC,aAAa,EAAxB;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,GADF,eAEE;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,6BAFF,eAGE;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,6DAHF,CADF,eAME;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,UANF,EAOGC,eAPH,CADF;AAWD"},"metadata":{},"sourceType":"module"}
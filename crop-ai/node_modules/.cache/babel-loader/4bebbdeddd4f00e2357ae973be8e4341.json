{"ast":null,"code":"import _slicedToArray from \"C:\\\\Users\\\\rianw\\\\Dev Projects\\\\crop-ai\\\\frontend\\\\crop-ai\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\rianw\\\\Dev Projects\\\\crop-ai\\\\frontend\\\\crop-ai\\\\src\\\\ManageUsers.js\";\nimport React, { useEffect, useState } from \"react\";\nimport { useAuth } from \"./contexts/AuthContext\";\nimport { Table, TableBody, TableCell, TableContainer, TableHead, TableRow, Button } from \"@mui/material\";\nimport { child, get, getDatabase, query, ref, set, onChildAdded, onValue, equalTo, orderByChild, remove } from \"firebase/database\";\nimport Paper from \"@mui/material/Paper\";\nexport default function ManageUsers() {\n  var _useAuth = useAuth(),\n      readUser = _useAuth.readUser;\n\n  var _useState = useState({}),\n      _useState2 = _slicedToArray(_useState, 2),\n      show = _useState2[0],\n      setShow = _useState2[1];\n\n  useEffect(function () {\n    readUser();\n  }, []);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(TableContainer, {\n    component: Paper,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Table, {\n    sx: {\n      minWidth: 650\n    },\n    \"aria-label\": \"simple table\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(TableHead, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(TableRow, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(TableCell, {\n    align: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 15\n    }\n  }, \"User ID\"), /*#__PURE__*/React.createElement(TableCell, {\n    align: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 15\n    }\n  }, \"User Name\"), /*#__PURE__*/React.createElement(TableCell, {\n    align: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 15\n    }\n  }, \"User email\"))), /*#__PURE__*/React.createElement(TableBody, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 11\n    }\n  }))));\n}","map":{"version":3,"names":["React","useEffect","useState","useAuth","Table","TableBody","TableCell","TableContainer","TableHead","TableRow","Button","child","get","getDatabase","query","ref","set","onChildAdded","onValue","equalTo","orderByChild","remove","Paper","ManageUsers","readUser","show","setShow","minWidth"],"sources":["C:/Users/rianw/Dev Projects/crop-ai/frontend/crop-ai/src/ManageUsers.js"],"sourcesContent":["import React, {useEffect, useState} from \"react\";\nimport { useAuth } from \"./contexts/AuthContext\";\nimport {\n  Table,\n  TableBody,\n  TableCell,\n  TableContainer,\n  TableHead,\n  TableRow,\n  Button\n} from \"@mui/material\";\nimport { child, get, getDatabase,query,ref, set,onChildAdded,onValue, equalTo,orderByChild,remove } from \"firebase/database\";\nimport Paper from \"@mui/material/Paper\";\n\n\n\nexport default function ManageUsers() {\n    const {readUser} = useAuth();\n    const [show, setShow] = useState({});\n\n\n    useEffect(() =>{\n\n      readUser()\n    }, [])\n\n  \n\n\n  return (\n    <div>\n     \n      <TableContainer component={Paper}>\n        <Table sx={{ minWidth: 650 }} aria-label=\"simple table\">\n          <TableHead>\n            <TableRow>\n              <TableCell align=\"center\">User ID</TableCell>\n              <TableCell align=\"center\">User Name</TableCell>\n              <TableCell align=\"center\">User email</TableCell>\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {/* {rows.map((row) => (\n              <TableRow\n              key={row.UserId}\n              \n            >\n              <TableCell align=\"center\">{row.UserId}</TableCell>\n              <TableCell align=\"center\">{row.userName}</TableCell>\n              <TableCell align=\"center\">{row.email}</TableCell>\n              <TableCell align='center' >\n             \n           \n              </TableCell>\n            </TableRow>\n            ))} */}\n          </TableBody>\n        </Table>\n      </TableContainer>  \n      \n     \n    </div>\n  );\n}\n"],"mappings":";;AAAA,OAAOA,KAAP,IAAeC,SAAf,EAA0BC,QAA1B,QAAyC,OAAzC;AACA,SAASC,OAAT,QAAwB,wBAAxB;AACA,SACEC,KADF,EAEEC,SAFF,EAGEC,SAHF,EAIEC,cAJF,EAKEC,SALF,EAMEC,QANF,EAOEC,MAPF,QAQO,eARP;AASA,SAASC,KAAT,EAAgBC,GAAhB,EAAqBC,WAArB,EAAiCC,KAAjC,EAAuCC,GAAvC,EAA4CC,GAA5C,EAAgDC,YAAhD,EAA6DC,OAA7D,EAAsEC,OAAtE,EAA8EC,YAA9E,EAA2FC,MAA3F,QAAyG,mBAAzG;AACA,OAAOC,KAAP,MAAkB,qBAAlB;AAIA,eAAe,SAASC,WAAT,GAAuB;EAAA,eACfpB,OAAO,EADQ;EAAA,IAC3BqB,QAD2B,YAC3BA,QAD2B;;EAAA,gBAEVtB,QAAQ,CAAC,EAAD,CAFE;EAAA;EAAA,IAE3BuB,IAF2B;EAAA,IAErBC,OAFqB;;EAKlCzB,SAAS,CAAC,YAAK;IAEbuB,QAAQ;EACT,CAHQ,EAGN,EAHM,CAAT;EAQF,oBACE;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,gBAEE,oBAAC,cAAD;IAAgB,SAAS,EAAEF,KAA3B;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,gBACE,oBAAC,KAAD;IAAO,EAAE,EAAE;MAAEK,QAAQ,EAAE;IAAZ,CAAX;IAA8B,cAAW,cAAzC;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,gBACE,oBAAC,SAAD;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,gBACE,oBAAC,QAAD;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,gBACE,oBAAC,SAAD;IAAW,KAAK,EAAC,QAAjB;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,aADF,eAEE,oBAAC,SAAD;IAAW,KAAK,EAAC,QAAjB;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,eAFF,eAGE,oBAAC,SAAD;IAAW,KAAK,EAAC,QAAjB;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,gBAHF,CADF,CADF,eAQE,oBAAC,SAAD;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,EARF,CADF,CAFF,CADF;AAkCD"},"metadata":{},"sourceType":"module"}
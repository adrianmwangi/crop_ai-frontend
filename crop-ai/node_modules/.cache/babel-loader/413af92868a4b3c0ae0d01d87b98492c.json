{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\rianw\\\\Dev Projects\\\\crop-ai\\\\frontend\\\\crop-ai\\\\src\\\\Predict.js\";\nimport React, { useCallback } from 'react';\nimport { useDropzone } from 'react-dropzone';\nvar onDrop = useCallback(function (acceptedFiles) {// Do something with the files\n}, []);\n\nvar _useDropzone = useDropzone({\n  onDrop: onDrop\n}),\n    getRootProps = _useDropzone.getRootProps,\n    getInputProps = _useDropzone.getInputProps,\n    isDragActive = _useDropzone.isDragActive;\n\nexport default function Predict() {\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", Object.assign({}, getRootProps(), {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 5\n    }\n  }), /*#__PURE__*/React.createElement(\"input\", Object.assign({}, getInputProps(), {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 5\n    }\n  })), isDragActive ? /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 9\n    }\n  }, \"Drop the files here ...\") : /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 9\n    }\n  }, \"Drag 'n' drop some files here, or click to select files\")));\n}","map":{"version":3,"names":["React","useCallback","useDropzone","onDrop","acceptedFiles","getRootProps","getInputProps","isDragActive","Predict"],"sources":["C:/Users/rianw/Dev Projects/crop-ai/frontend/crop-ai/src/Predict.js"],"sourcesContent":["import React, {useCallback} from 'react'\r\nimport {useDropzone} from 'react-dropzone'\r\n\r\n\r\nconst onDrop = useCallback(acceptedFiles => {\r\n  // Do something with the files\r\n}, [])\r\nconst {getRootProps, getInputProps, isDragActive} = useDropzone({onDrop})\r\n\r\n\r\nexport default function Predict() {\r\n  return (\r\n    <div>\r\n    <div {...getRootProps()}>\r\n    <input {...getInputProps()} />\r\n    {\r\n      isDragActive ?\r\n        <p>Drop the files here ...</p> :\r\n        <p>Drag 'n' drop some files here, or click to select files</p>\r\n    }\r\n  </div>\r\n  </div>\r\n  )\r\n}\r\n"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,WAAf,QAAiC,OAAjC;AACA,SAAQC,WAAR,QAA0B,gBAA1B;AAGA,IAAMC,MAAM,GAAGF,WAAW,CAAC,UAAAG,aAAa,EAAI,CAC1C;AACD,CAFyB,EAEvB,EAFuB,CAA1B;;mBAGoDF,WAAW,CAAC;EAACC,MAAM,EAANA;AAAD,CAAD,C;IAAxDE,Y,gBAAAA,Y;IAAcC,a,gBAAAA,a;IAAeC,Y,gBAAAA,Y;;AAGpC,eAAe,SAASC,OAAT,GAAmB;EAChC,oBACE;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,gBACA,6CAASH,YAAY,EAArB;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,iBACA,+CAAWC,aAAa,EAAxB;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,GADA,EAGEC,YAAY,gBACV;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,6BADU,gBAEV;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,6DALJ,CADA,CADF;AAYD"},"metadata":{},"sourceType":"module"}